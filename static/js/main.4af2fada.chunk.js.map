{"version":3,"sources":["Components/ContactsList/ContactsList.module.css","Components/ContactsList/Contact/Contact.module.css","Components/Container/Container.module.css","Components/Button/Button.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactsList/Contact/Contact.jsx","Components/ContactsList/ContactsList.jsx","Components/Container/Container.jsx","App.jsx","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","Button","type","text","onClick","disabled","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","onBtnClick","evt","preventDefault","props","addContact","this","onSubmit","className","s","form","onChange","pattern","title","required","input","Component","Filter","onFilterChange","Contact","idx","ContactsList","list","ContactList","map","id","Container","children","container","App","contacts","filter","every","contact","ps","nanoid","alert","deleteContact","handleFilterChange","getFindContact","normalizeFilter","toLowerCase","includes","contactLS","JSON","parse","localStorage","getItem","pp","length","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af2fada.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactsList_ContactList__3S3Qn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__gumza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ type, text, onClick, disabled }) {\n  return (\n    <button type={type} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  options: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n  }),\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onBtnClick = (evt) => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n    this.props.addContact(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { handleInputChange, onBtnClick } = this;\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={onBtnClick}>\n        <label className={s.form}>\n          <p>Name</p>\n          <input\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={s.input}\n          />\n          <p>Number</p>\n          <input\n            onChange={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            className={s.input}\n          />\n          <Button\n            text=\"Add Contact\"\n            type=\"submit\"\n            disabled={number && name ? false : true}\n          />\n        </label>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onFilterChange }) {\n  return (\n    <label>\n      Find contacts by name :\n      <input\n        onChange={onFilterChange}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Contact.module.css\";\nimport Button from \"../../Button\";\n\nfunction Contact({ name, number, idx, onClick }) {\n  return (\n    <li className={s.Contact}>\n      <p>\n        {idx + 1} - {name}: {number}\n      </p>\n      <Button onClick={onClick} text=\"Delete\" type=\"button\" />\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  options: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    idx: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n  }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\nimport Contact from \"./Contact\";\n\nfunction ContactsList({ list, onClick }) {\n  return (\n    <ul className={s.ContactList}>\n      {list.map(({ name, number, id }, idx) => (\n        <Contact\n          key={id}\n          idx={idx}\n          name={name}\n          number={number}\n          onClick={() => {\n            onClick(id);\n          }}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  list: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from \"react\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport s from \"./App.module.css\";\n\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactsList from \"./Components/ContactsList\";\nimport Container from \"./Components/Container\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    this.state.contacts.every((contact) => contact.name !== name)\n      ? this.setState((ps) => ({\n          contacts: [\n            ...ps.contacts,\n            {\n              name,\n              number,\n              id: nanoid(),\n            },\n          ],\n        }))\n      : alert(`${name} is alredy in contacts`);\n  };\n\n  deleteContact = (id) => {\n    this.setState((ps) => ({\n      contacts: ps.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFindContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  componentDidMount() {\n    const contactLS = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contactLS) {\n      this.setState({ contacts: contactLS });\n    }\n  }\n\n  componentDidUpdate(pp, ps) {\n    if (this.state.contacts.length !== ps.contacts.length) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const { addContact, deleteContact, handleFilterChange, getFindContact } =\n      this;\n\n    return (\n      <div className={s.App}>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm addContact={addContact} />\n          <h2>Contacts</h2>\n          <Filter value={filter} onFilterChange={handleFilterChange} />\n          <ContactsList list={getFindContact()} onClick={deleteContact} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"input\":\"ContactForm_input__3dHde\"};"],"sourceRoot":""}